# –°–∫—Ä–∏–ø—Ç—ã –¥–ª—è –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–æ–π —É—Å—Ç–∞–Ω–æ–≤–∫–∏ dotfiles

## –í–∞—Ä–∏–∞–Ω—Ç 1: –ü—Ä–æ—Å—Ç–æ–π Fish —Å–∫—Ä–∏–ø—Ç

–°–æ–∑–¥–∞–π—Ç–µ —Ñ–∞–π–ª `install.fish` –≤ –≤–∞—à–µ–º dotfiles —Ä–µ–ø–æ–∑–∏—Ç–æ—Ä–∏–∏:

```fish
#!/usr/bin/env fish

# install.fish - —Å–∫—Ä–∏–ø—Ç –¥–ª—è –±—ã—Å—Ç—Ä–æ–≥–æ –≤–æ—Å—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–∏—è dotfiles

set -l DOTFILES_REPO "git@github.com:rmuhamedgaliev/dotfiles.git"
set -l DOTFILES_DIR "$HOME/.dotfiles"

echo "üêü –£—Å—Ç–∞–Ω–æ–≤–∫–∞ dotfiles..."

# –ü—Ä–æ–≤–µ—Ä—è–µ–º –Ω–∞–ª–∏—á–∏–µ Fish
if not command -v fish >/dev/null
    echo "‚ùå Fish shell –Ω–µ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω. –£—Å—Ç–∞–Ω–æ–≤–∏—Ç–µ Fish —Å–Ω–∞—á–∞–ª–∞."
    exit 1
end

# –ü—Ä–æ–≤–µ—Ä—è–µ–º –Ω–∞–ª–∏—á–∏–µ Git
if not command -v git >/dev/null
    echo "‚ùå Git –Ω–µ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω. –£—Å—Ç–∞–Ω–æ–≤–∏—Ç–µ Git —Å–Ω–∞—á–∞–ª–∞."
    exit 1
end

# –£–¥–∞–ª—è–µ–º —Å—É—â–µ—Å—Ç–≤—É—é—â—É—é –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏—é dotfiles –µ—Å–ª–∏ –µ—Å—Ç—å
if test -d $DOTFILES_DIR
    echo "üóëÔ∏è  –£–¥–∞–ª—è–µ–º —Å—É—â–µ—Å—Ç–≤—É—é—â—É—é –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏—é dotfiles..."
    rm -rf $DOTFILES_DIR
end

# –ö–ª–æ–Ω–∏—Ä—É–µ–º —Ä–µ–ø–æ–∑–∏—Ç–æ—Ä–∏–π
echo "üì• –ö–ª–æ–Ω–∏—Ä–æ–≤–∞–Ω–∏–µ dotfiles —Ä–µ–ø–æ–∑–∏—Ç–æ—Ä–∏—è..."
git clone --bare $DOTFILES_REPO $DOTFILES_DIR

# –°–æ–∑–¥–∞–µ–º –≤—Ä–µ–º–µ–Ω–Ω—ã–π –∞–ª–∏–∞—Å
alias dotfiles="/usr/bin/git --git-dir=$DOTFILES_DIR --work-tree=$HOME"

# –°–æ–∑–¥–∞–µ–º –±—ç–∫–∞–ø —Å—É—â–µ—Å—Ç–≤—É—é—â–∏—Ö —Ñ–∞–π–ª–æ–≤
echo "üíæ –°–æ–∑–¥–∞–Ω–∏–µ –±—ç–∫–∞–ø–∞ —Å—É—â–µ—Å—Ç–≤—É—é—â–∏—Ö –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–π..."
set -l backup_dir "$HOME/.config-backup-"(date +%Y%m%d-%H%M%S)

if dotfiles checkout 2>/dev/null
    echo "‚úÖ Checkout –≤—ã–ø–æ–ª–Ω–µ–Ω —É—Å–ø–µ—à–Ω–æ"
else
    echo "‚ö†Ô∏è  –ù–∞–π–¥–µ–Ω—ã –∫–æ–Ω—Ñ–ª–∏–∫—Ç—É—é—â–∏–µ —Ñ–∞–π–ª—ã, —Å–æ–∑–¥–∞–µ–º –±—ç–∫–∞–ø –≤ $backup_dir"
    mkdir -p $backup_dir
    
    # –ü–æ–ª—É—á–∞–µ–º —Å–ø–∏—Å–æ–∫ –∫–æ–Ω—Ñ–ª–∏–∫—Ç—É—é—â–∏—Ö —Ñ–∞–π–ª–æ–≤ –∏ –ø–µ—Ä–µ–º–µ—â–∞–µ–º –∏—Ö –≤ –±—ç–∫–∞–ø
    dotfiles checkout 2>&1 | grep -E "^\s+" | awk '{print $1}' | while read -l file
        if test -f "$HOME/$file"
            set -l dir (dirname "$backup_dir/$file")
            mkdir -p $dir
            mv "$HOME/$file" "$backup_dir/$file"
            echo "  üì¶ $file -> $backup_dir/$file"
        end
    end
    
    # –ü–æ–≤—Ç–æ—Ä—è–µ–º checkout
    dotfiles checkout
end

# –ù–∞—Å—Ç—Ä–∞–∏–≤–∞–µ–º git
echo "‚öôÔ∏è  –ù–∞—Å—Ç—Ä–æ–π–∫–∞ git –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–∏..."
dotfiles config --local status.showUntrackedFiles no

# –î–æ–±–∞–≤–ª—è–µ–º –∞–ª–∏–∞—Å –≤ Fish –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—é
echo "üîß –î–æ–±–∞–≤–ª–µ–Ω–∏–µ –∞–ª–∏–∞—Å–∞ –≤ Fish –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—é..."
set -l fish_config "$HOME/.config/fish/config.fish"

# –°–æ–∑–¥–∞–µ–º –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏—é fish config –µ—Å–ª–∏ –µ—ë –Ω–µ—Ç
mkdir -p (dirname $fish_config)

# –ü—Ä–æ–≤–µ—Ä—è–µ–º, –µ—Å—Ç—å –ª–∏ —É–∂–µ –∞–ª–∏–∞—Å
if not grep -q "alias dotfiles" $fish_config
    echo "" >> $fish_config
    echo "# Dotfiles management alias" >> $fish_config
    echo "alias dotfiles='/usr/bin/git --git-dir=\$HOME/.dotfiles --work-tree=\$HOME'" >> $fish_config
    echo "‚úÖ –ê–ª–∏–∞—Å –¥–æ–±–∞–≤–ª–µ–Ω –≤ $fish_config"
else
    echo "‚ÑπÔ∏è  –ê–ª–∏–∞—Å —É–∂–µ —Å—É—â–µ—Å—Ç–≤—É–µ—Ç –≤ $fish_config"
end

# –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä—É–µ–º —Å—É–±–º–æ–¥—É–ª–∏ –µ—Å–ª–∏ –µ—Å—Ç—å
if test -f "$HOME/.gitmodules"
    echo "üì¶ –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è —Å—É–±–º–æ–¥—É–ª–µ–π..."
    dotfiles submodule init
    dotfiles submodule update
end

echo ""
echo "üéâ Dotfiles —É—Å–ø–µ—à–Ω–æ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω—ã!"
echo ""
echo "üîÑ –ü–µ—Ä–µ–∑–∞–ø—É—Å—Ç–∏—Ç–µ Fish shell –∏–ª–∏ –≤—ã–ø–æ–ª–Ω–∏—Ç–µ:"
echo "   source ~/.config/fish/config.fish"
echo ""
echo "üìã –ü–æ–ª–µ–∑–Ω—ã–µ –∫–æ–º–∞–Ω–¥—ã:"
echo "   dotfiles status    - —Å—Ç–∞—Ç—É—Å —Ä–µ–ø–æ–∑–∏—Ç–æ—Ä–∏—è"
echo "   dotfiles add <file> - –¥–æ–±–∞–≤–∏—Ç—å —Ñ–∞–π–ª"
echo "   dotfiles commit -m 'message' - –∑–∞–∫–æ–º–º–∏—Ç–∏—Ç—å"
echo "   dotfiles push      - –æ—Ç–ø—Ä–∞–≤–∏—Ç—å –∏–∑–º–µ–Ω–µ–Ω–∏—è"
echo ""

if test -d $backup_dir
    echo "üì¶ –ë—ç–∫–∞–ø —Å—Ç–∞—Ä—ã—Ö —Ñ–∞–π–ª–æ–≤: $backup_dir"
end
```

## –í–∞—Ä–∏–∞–Ω—Ç 2: –û–¥–Ω–æ—Å—Ç—Ä–æ—á–Ω–∞—è —É—Å—Ç–∞–Ω–æ–≤–∫–∞

–î–æ–±–∞–≤—å—Ç–µ –≤ README –≤–∞—à–µ–≥–æ —Ä–µ–ø–æ–∑–∏—Ç–æ—Ä–∏—è:

```bash
# –ë—ã—Å—Ç—Ä–∞—è —É—Å—Ç–∞–Ω–æ–≤–∫–∞ (—Å–∫–æ–ø–∏—Ä—É–π—Ç–µ –∏ –≤—Å—Ç–∞–≤—å—Ç–µ –≤ —Ç–µ—Ä–º–∏–Ω–∞–ª)
curl -fLo /tmp/install-dotfiles.fish https://raw.githubusercontent.com/rmuhamedgaliev/dotfiles/master/install.fish && fish /tmp/install-dotfiles.fish
```

## –í–∞—Ä–∏–∞–Ω—Ç 3: Bash –≤–µ—Ä—Å–∏—è (–¥–ª—è —Å–æ–≤–º–µ—Å—Ç–∏–º–æ—Å—Ç–∏)

–ï—Å–ª–∏ –Ω—É–∂–Ω–∞ —Å–æ–≤–º–µ—Å—Ç–∏–º–æ—Å—Ç—å —Å bash/zsh, —Å–æ–∑–¥–∞–π—Ç–µ `install.sh`:

```bash
#!/bin/bash

DOTFILES_REPO="git@github.com:rmuhamedgaliev/dotfiles.git"
DOTFILES_DIR="$HOME/.dotfiles"

echo "üêü –£—Å—Ç–∞–Ω–æ–≤–∫–∞ dotfiles..."

# –ü—Ä–æ–≤–µ—Ä—è–µ–º Git
if ! command -v git >/dev/null 2>&1; then
    echo "‚ùå Git –Ω–µ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω"
    exit 1
fi

# –£–¥–∞–ª—è–µ–º —Å—É—â–µ—Å—Ç–≤—É—é—â—É—é –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏—é
if [ -d "$DOTFILES_DIR" ]; then
    echo "üóëÔ∏è  –£–¥–∞–ª—è–µ–º —Å—É—â–µ—Å—Ç–≤—É—é—â—É—é –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏—é dotfiles..."
    rm -rf "$DOTFILES_DIR"
fi

# –ö–ª–æ–Ω–∏—Ä—É–µ–º
echo "üì• –ö–ª–æ–Ω–∏—Ä–æ–≤–∞–Ω–∏–µ —Ä–µ–ø–æ–∑–∏—Ç–æ—Ä–∏—è..."
git clone --bare "$DOTFILES_REPO" "$DOTFILES_DIR"

# –°–æ–∑–¥–∞–µ–º —Ñ—É–Ω–∫—Ü–∏—é dotfiles
function dotfiles {
   /usr/bin/git --git-dir="$DOTFILES_DIR" --work-tree="$HOME" "$@"
}

# –ë—ç–∫–∞–ø –∫–æ–Ω—Ñ–ª–∏–∫—Ç—É—é—â–∏—Ö —Ñ–∞–π–ª–æ–≤
echo "üíæ –ü—Ä–æ–≤–µ—Ä–∫–∞ –∫–æ–Ω—Ñ–ª–∏–∫—Ç–æ–≤..."
if ! dotfiles checkout 2>/dev/null; then
    BACKUP_DIR="$HOME/.config-backup-$(date +%Y%m%d-%H%M%S)"
    echo "‚ö†Ô∏è  –°–æ–∑–¥–∞–Ω–∏–µ –±—ç–∫–∞–ø–∞ –≤ $BACKUP_DIR"
    mkdir -p "$BACKUP_DIR"
    
    dotfiles checkout 2>&1 | egrep "\s+\." | awk '{print $1}' | while IFS= read -r file; do
        if [ -f "$HOME/$file" ]; then
            mkdir -p "$(dirname "$BACKUP_DIR/$file")"
            mv "$HOME/$file" "$BACKUP_DIR/$file"
            echo "  üì¶ $file -> $BACKUP_DIR/$file"
        fi
    done
    
    dotfiles checkout
fi

# –ù–∞—Å—Ç—Ä–æ–π–∫–∞
dotfiles config --local status.showUntrackedFiles no

# –î–æ–±–∞–≤–ª—è–µ–º –∞–ª–∏–∞—Å
SHELL_RC=""
if [ "$SHELL" = "/bin/fish" ] || [ "$SHELL" = "/usr/bin/fish" ]; then
    SHELL_RC="$HOME/.config/fish/config.fish"
    mkdir -p "$(dirname "$SHELL_RC")"
    ALIAS_LINE="alias dotfiles='/usr/bin/git --git-dir=\$HOME/.dotfiles --work-tree=\$HOME'"
elif [ "$SHELL" = "/bin/zsh" ] || [ "$SHELL" = "/usr/bin/zsh" ]; then
    SHELL_RC="$HOME/.zshrc"
    ALIAS_LINE="alias dotfiles='/usr/bin/git --git-dir=\$HOME/.dotfiles --work-tree=\$HOME'"
else
    SHELL_RC="$HOME/.bashrc"
    ALIAS_LINE="alias dotfiles='/usr/bin/git --git-dir=\$HOME/.dotfiles --work-tree=\$HOME'"
fi

if ! grep -q "alias dotfiles" "$SHELL_RC" 2>/dev/null; then
    echo "" >> "$SHELL_RC"
    echo "# Dotfiles management alias" >> "$SHELL_RC"
    echo "$ALIAS_LINE" >> "$SHELL_RC"
fi

# –°—É–±–º–æ–¥—É–ª–∏
if [ -f "$HOME/.gitmodules" ]; then
    echo "üì¶ –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è —Å—É–±–º–æ–¥—É–ª–µ–π..."
    dotfiles submodule init
    dotfiles submodule update
fi

echo ""
echo "üéâ Dotfiles —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω—ã —É—Å–ø–µ—à–Ω–æ!"
echo "üîÑ –ü–µ—Ä–µ–∑–∞–ø—É—Å—Ç–∏—Ç–µ shell –∏–ª–∏ –≤—ã–ø–æ–ª–Ω–∏—Ç–µ: source $SHELL_RC"
```

## –í–∞—Ä–∏–∞–Ω—Ç 4: –†–∞—Å—à–∏—Ä–µ–Ω–Ω—ã–π —Å–∫—Ä–∏–ø—Ç –¥–ª—è Fedora/RHEL —Å DNF

```fish
#!/usr/bin/env fish

# install-fedora.fish - –ø–æ–ª–Ω–∞—è —É—Å—Ç–∞–Ω–æ–≤–∫–∞ —Å –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç—è–º–∏ –¥–ª—è Fedora/RHEL

set -l DOTFILES_REPO "git@github.com:rmuhamedgaliev/dotfiles.git"
set -l DOTFILES_DIR "$HOME/.dotfiles"

echo "üöÄ –ü–æ–ª–Ω–∞—è —É—Å—Ç–∞–Ω–æ–≤–∫–∞ dotfiles –∏ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–µ–π –¥–ª—è Fedora/RHEL..."

# –§—É–Ω–∫—Ü–∏—è –¥–ª—è —É—Å—Ç–∞–Ω–æ–≤–∫–∏ –ø–∞–∫–µ—Ç–æ–≤ —á–µ—Ä–µ–∑ DNF
function install_packages
    echo "üì¶ –£—Å—Ç–∞–Ω–æ–≤–∫–∞ –ø–∞–∫–µ—Ç–æ–≤ —á–µ—Ä–µ–∑ DNF..."
    
    # –û—Å–Ω–æ–≤–Ω—ã–µ –ø–∞–∫–µ—Ç—ã
    sudo dnf install -y fish vim git curl wget unzip
    
    # –í–∫–ª—é—á–∞–µ–º RPM Fusion –¥–ª—è –¥–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω—ã—Ö –ø–∞–∫–µ—Ç–æ–≤
    echo "üîß –í–∫–ª—é—á–µ–Ω–∏–µ RPM Fusion —Ä–µ–ø–æ–∑–∏—Ç–æ—Ä–∏–µ–≤..."
    sudo dnf install -y https://mirrors.rpmfusion.org/free/fedora/rpmfusion-free-release-(rpm -E %fedora).noarch.rpm
    sudo dnf install -y https://mirrors.rpmfusion.org/nonfree/fedora/rpmfusion-nonfree-release-(rpm -E %fedora).noarch.rpm
    
    # –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º –¥–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω—ã–µ —à—Ä–∏—Ñ—Ç—ã
    echo "üé® –£—Å—Ç–∞–Ω–æ–≤–∫–∞ Nerd Fonts..."
    
    # –°–æ–∑–¥–∞–µ–º –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏—é –¥–ª—è —à—Ä–∏—Ñ—Ç–æ–≤
    mkdir -p ~/.local/share/fonts
    
    # –°–∫–∞—á–∏–≤–∞–µ–º –∏ —É—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º –ø–æ–ø—É–ª—è—Ä–Ω—ã–µ Nerd Fonts
    set -l fonts_dir "/tmp/nerd-fonts"
    mkdir -p $fonts_dir
    
    echo "  üì• –°–∫–∞—á–∏–≤–∞–µ–º JetBrains Mono Nerd Font..."
    curl -fLo "$fonts_dir/JetBrainsMono.zip" \
        https://github.com/ryanoasis/nerd-fonts/releases/latest/download/JetBrainsMono.zip
    
    echo "  üì• –°–∫–∞—á–∏–≤–∞–µ–º Hack Nerd Font..."
    curl -fLo "$fonts_dir/Hack.zip" \
        https://github.com/ryanoasis/nerd-fonts/releases/latest/download/Hack.zip
    
    echo "  üì• –°–∫–∞—á–∏–≤–∞–µ–º FiraCode Nerd Font..."
    curl -fLo "$fonts_dir/FiraCode.zip" \
        https://github.com/ryanoasis/nerd-fonts/releases/latest/download/FiraCode.zip
    
    # –†–∞—Å–ø–∞–∫–æ–≤—ã–≤–∞–µ–º —à—Ä–∏—Ñ—Ç—ã
    for font_zip in $fonts_dir/*.zip
        echo "  üì¶ –†–∞—Å–ø–∞–∫–æ–≤–∫–∞ "(basename $font_zip)"..."
        unzip -q "$font_zip" -d ~/.local/share/fonts/
    end
    
    # –û–±–Ω–æ–≤–ª—è–µ–º –∫—ç—à —à—Ä–∏—Ñ—Ç–æ–≤
    echo "  üîÑ –û–±–Ω–æ–≤–ª–µ–Ω–∏–µ –∫—ç—à–∞ —à—Ä–∏—Ñ—Ç–æ–≤..."
    fc-cache -fv
    
    # –û—á–∏—â–∞–µ–º –≤—Ä–µ–º–µ–Ω–Ω—ã–µ —Ñ–∞–π–ª—ã
    rm -rf $fonts_dir
    
    echo "‚úÖ –ü–∞–∫–µ—Ç—ã —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω—ã —É—Å–ø–µ—à–Ω–æ!"
end

# –ü—Ä–æ–≤–µ—Ä—è–µ–º, —á—Ç–æ –º—ã –Ω–∞ Fedora/RHEL —Å–∏—Å—Ç–µ–º–µ
if not command -v dnf >/dev/null
    echo "‚ùå DNF –Ω–µ –Ω–∞–π–¥–µ–Ω. –≠—Ç–æ—Ç —Å–∫—Ä–∏–ø—Ç –ø—Ä–µ–¥–Ω–∞–∑–Ω–∞—á–µ–Ω –¥–ª—è Fedora/RHEL —Å–∏—Å—Ç–µ–º."
    echo "   –î–ª—è –¥—Ä—É–≥–∏—Ö –¥–∏—Å—Ç—Ä–∏–±—É—Ç–∏–≤–æ–≤ –∏—Å–ø–æ–ª—å–∑—É–π—Ç–µ –±–∞–∑–æ–≤—ã–π install.fish"
    exit 1
end

# –£—Å—Ç–∞–Ω–æ–≤–∫–∞ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–µ–π
install_packages

# –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º Fish –∫–∞–∫ shell –ø–æ —É–º–æ–ª—á–∞–Ω–∏—é
echo "üêü –ù–∞—Å—Ç—Ä–æ–π–∫–∞ Fish –∫–∞–∫ shell –ø–æ —É–º–æ–ª—á–∞–Ω–∏—é..."
if not grep -q (command -v fish) /etc/shells
    echo (command -v fish) | sudo tee -a /etc/shells
end

# –ú–µ–Ω—è–µ–º shell (–ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å —Å–∞–º –ø–æ–¥—Ç–≤–µ—Ä–¥–∏—Ç)
echo "üîÑ –•–æ—Ç–∏—Ç–µ —Å–¥–µ–ª–∞—Ç—å Fish shell –ø–æ —É–º–æ–ª—á–∞–Ω–∏—é? (y/n)"
read -l response
if test "$response" = "y" -o "$response" = "Y"
    chsh -s (command -v fish)
    echo "‚úÖ Fish —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω –∫–∞–∫ shell –ø–æ —É–º–æ–ª—á–∞–Ω–∏—é"
end

echo ""
echo "üì• –¢–µ–ø–µ—Ä—å —É—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º dotfiles..."

# –£—Å—Ç–∞–Ω–æ–≤–∫–∞ dotfiles (–æ—Å–Ω–æ–≤–Ω–æ–π –∫–æ–¥)
if test -d $DOTFILES_DIR
    echo "üóëÔ∏è  –£–¥–∞–ª—è–µ–º —Å—É—â–µ—Å—Ç–≤—É—é—â—É—é –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏—é dotfiles..."
    rm -rf $DOTFILES_DIR
end

echo "üì• –ö–ª–æ–Ω–∏—Ä–æ–≤–∞–Ω–∏–µ dotfiles —Ä–µ–ø–æ–∑–∏—Ç–æ—Ä–∏—è..."
git clone --bare $DOTFILES_REPO $DOTFILES_DIR

# –°–æ–∑–¥–∞–µ–º –≤—Ä–µ–º–µ–Ω–Ω—ã–π –∞–ª–∏–∞—Å
alias dotfiles="/usr/bin/git --git-dir=$DOTFILES_DIR --work-tree=$HOME"

# –°–æ–∑–¥–∞–µ–º –±—ç–∫–∞–ø —Å—É—â–µ—Å—Ç–≤—É—é—â–∏—Ö —Ñ–∞–π–ª–æ–≤
echo "üíæ –°–æ–∑–¥–∞–Ω–∏–µ –±—ç–∫–∞–ø–∞ —Å—É—â–µ—Å—Ç–≤—É—é—â–∏—Ö –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–π..."
set -l backup_dir "$HOME/.config-backup-"(date +%Y%m%d-%H%M%S)

if dotfiles checkout 2>/dev/null
    echo "‚úÖ Checkout –≤—ã–ø–æ–ª–Ω–µ–Ω —É—Å–ø–µ—à–Ω–æ"
else
    echo "‚ö†Ô∏è  –ù–∞–π–¥–µ–Ω—ã –∫–æ–Ω—Ñ–ª–∏–∫—Ç—É—é—â–∏–µ —Ñ–∞–π–ª—ã, —Å–æ–∑–¥–∞–µ–º –±—ç–∫–∞–ø –≤ $backup_dir"
    mkdir -p $backup_dir
    
    dotfiles checkout 2>&1 | grep -E "^\s+" | awk '{print $1}' | while read -l file
        if test -f "$HOME/$file"
            set -l dir (dirname "$backup_dir/$file")
            mkdir -p $dir
            mv "$HOME/$file" "$backup_dir/$file"
            echo "  üì¶ $file -> $backup_dir/$file"
        end
    end
    
    dotfiles checkout
end

# –ù–∞—Å—Ç—Ä–∞–∏–≤–∞–µ–º git
dotfiles config --local status.showUntrackedFiles no

# –î–æ–±–∞–≤–ª—è–µ–º –∞–ª–∏–∞—Å –≤ Fish –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—é
echo "üîß –î–æ–±–∞–≤–ª–µ–Ω–∏–µ –∞–ª–∏–∞—Å–∞ –≤ Fish –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—é..."
set -l fish_config "$HOME/.config/fish/config.fish"
mkdir -p (dirname $fish_config)

if not test -f $fish_config
    touch $fish_config
end

if not grep -q "alias dotfiles" $fish_config
    echo "" >> $fish_config
    echo "# Dotfiles management alias" >> $fish_config
    echo "alias dotfiles='/usr/bin/git --git-dir=\$HOME/.dotfiles --work-tree=\$HOME'" >> $fish_config
    echo "‚úÖ –ê–ª–∏–∞—Å –¥–æ–±–∞–≤–ª–µ–Ω –≤ $fish_config"
end

# –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä—É–µ–º —Å—É–±–º–æ–¥—É–ª–∏ –µ—Å–ª–∏ –µ—Å—Ç—å
if test -f "$HOME/.gitmodules"
    echo "üì¶ –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è —Å—É–±–º–æ–¥—É–ª–µ–π..."
    dotfiles submodule init
    dotfiles submodule update
end

# –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º –¥–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω—ã–µ –∏–Ω—Å—Ç—Ä—É–º–µ–Ω—Ç—ã
echo "üõ†Ô∏è  –£—Å—Ç–∞–Ω–æ–≤–∫–∞ –¥–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω—ã—Ö –∏–Ω—Å—Ç—Ä—É–º–µ–Ω—Ç–æ–≤..."

# Starship prompt
if not command -v starship >/dev/null
    echo "‚≠ê –£—Å—Ç–∞–Ω–æ–≤–∫–∞ Starship prompt..."
    curl -sS https://starship.rs/install.sh | sh -s -- --yes
end

# Fisher (–º–µ–Ω–µ–¥–∂–µ—Ä –ø–ª–∞–≥–∏–Ω–æ–≤ –¥–ª—è Fish)
if not test -f ~/.config/fish/functions/fisher.fish
    echo "üé£ –£—Å—Ç–∞–Ω–æ–≤–∫–∞ Fisher..."
    curl -sL https://raw.githubusercontent.com/jorgebucaran/fisher/main/functions/fisher.fish | source
    fisher install jorgebucaran/fisher
end

echo ""
echo "üéâ –£—Å—Ç–∞–Ω–æ–≤–∫–∞ –∑–∞–≤–µ—Ä—à–µ–Ω–∞!"
echo ""
echo "üìã –ß—Ç–æ –±—ã–ª–æ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–æ:"
echo "   ‚Ä¢ Fish shell, Vim, Git, Curl, Wget"
echo "   ‚Ä¢ Nerd Fonts (JetBrains Mono, Hack, FiraCode)"
echo "   ‚Ä¢ Starship prompt"
echo "   ‚Ä¢ Fisher (–º–µ–Ω–µ–¥–∂–µ—Ä –ø–ª–∞–≥–∏–Ω–æ–≤ Fish)"
echo "   ‚Ä¢ –í–∞—à–∏ dotfiles"
echo ""
echo "üîÑ –†–µ–∫–æ–º–µ–Ω–¥—É–µ—Ç—Å—è –ø–µ—Ä–µ–∑–∞–ø—É—Å—Ç–∏—Ç—å —Ç–µ—Ä–º–∏–Ω–∞–ª –∏–ª–∏ –≤—ã–ø–æ–ª–Ω–∏—Ç—å:"
echo "   exec fish"
echo ""
echo "üìã –ü–æ–ª–µ–∑–Ω—ã–µ –∫–æ–º–∞–Ω–¥—ã:"
echo "   dotfiles status         - —Å—Ç–∞—Ç—É—Å —Ä–µ–ø–æ–∑–∏—Ç–æ—Ä–∏—è"
echo "   dotfiles add <file>     - –¥–æ–±–∞–≤–∏—Ç—å —Ñ–∞–π–ª"
echo "   dotfiles commit -m 'msg' - –∑–∞–∫–æ–º–º–∏—Ç–∏—Ç—å"
echo "   dotfiles push           - –æ—Ç–ø—Ä–∞–≤–∏—Ç—å –∏–∑–º–µ–Ω–µ–Ω–∏—è"
echo "   fisher list             - —Å–ø–∏—Å–æ–∫ Fish –ø–ª–∞–≥–∏–Ω–æ–≤"
echo ""

if test -d $backup_dir
    echo "üì¶ –ë—ç–∫–∞–ø —Å—Ç–∞—Ä—ã—Ö —Ñ–∞–π–ª–æ–≤: $backup_dir"
end

echo "‚ú® –ì–æ—Ç–æ–≤–æ! –î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å –≤ –Ω–∞—Å—Ç—Ä–æ–µ–Ω–Ω–æ–µ –æ–∫—Ä—É–∂–µ–Ω–∏–µ!"
```

## –ö–∞–∫ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å:

1. **–î–æ–±–∞–≤—å—Ç–µ —Å–∫—Ä–∏–ø—Ç –≤ –≤–∞—à dotfiles —Ä–µ–ø–æ–∑–∏—Ç–æ—Ä–∏–π**:
```fish
# –í –∫–æ—Ä–Ω–µ –≤–∞—à–µ–≥–æ dotfiles —Ä–µ–ø–æ–∑–∏—Ç–æ—Ä–∏—è
dotfiles add install.fish
dotfiles commit -m "–î–æ–±–∞–≤–ª–µ–Ω —Å–∫—Ä–∏–ø—Ç –∞–≤—Ç–æ—É—Å—Ç–∞–Ω–æ–≤–∫–∏"
dotfiles push
```

2. **–ë—ã—Å—Ç—Ä–∞—è —É—Å—Ç–∞–Ω–æ–≤–∫–∞ –Ω–∞ –Ω–æ–≤–æ–π –º–∞—à–∏–Ω–µ**:
```fish
# –û–¥–Ω–æ–π –∫–æ–º–∞–Ω–¥–æ–π
curl -fLo /tmp/install.fish https://raw.githubusercontent.com/rmuhamedgaliev/dotfiles/master/install.fish && fish /tmp/install.fish

# –ò–ª–∏ –∫–ª–æ–Ω–∏—Ä–æ–≤–∞—Ç—å –∏ –∑–∞–ø—É—Å—Ç–∏—Ç—å
git clone https://github.com/rmuhamedgaliev/dotfiles.git /tmp/dotfiles-setup
fish /tmp/dotfiles-setup/install.fish
```

3. **–î–æ–±–∞–≤—å—Ç–µ –≤ README —Ä–µ–ø–æ–∑–∏—Ç–æ—Ä–∏—è**:
```markdown
## –ë—ã—Å—Ç—Ä–∞—è —É—Å—Ç–∞–Ω–æ–≤–∫–∞

```bash
curl -fLo /tmp/install.fish https://raw.githubusercontent.com/rmuhamedgaliev/dotfiles/master/install.fish && fish /tmp/install.fish
```

–ö–∞–∫–æ–π –≤–∞—Ä–∏–∞–Ω—Ç –≤–∞–º –±–æ–ª—å—à–µ –Ω—Ä–∞–≤–∏—Ç—Å—è? –ú–æ–≥—É –∞–¥–∞–ø—Ç–∏—Ä–æ–≤–∞—Ç—å –ø–æ–¥ –≤–∞—à–∏ –Ω—É–∂–¥—ã!
